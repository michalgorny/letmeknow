apply plugin: 'com.android.application'

android {
    compileSdkVersion 19
    buildToolsVersion '21.0.2'

    defaultConfig {
        applicationId "pl.michalgorny.letmeknow"
        minSdkVersion 15
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/drawable'] } }
}


dependencies {
    compile 'junit:junit:4.12-beta-3'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.jakewharton:butterknife:5.1.2'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.squareup.retrofit:retrofit:1.6.1'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.jakewharton.timber:timber:2.4.+'
    compile 'com.jakewharton.hugo:hugo-runtime:1.1.0'
    compile 'com.github.dmytrodanylyk.circular-progress-button:library:1.1.3'
    compile 'com.parse.bolts:bolts-android:1.1.3'
    compile fileTree(dir: 'libs', include: 'Parse-*.jar')
}

task pushDownJdkDependency() {
    def imlFile = file("mobile.iml")
    doLast {
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }

            parsedXml.component[1].remove(jdkNode)
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': "Android API 19 Platform", 'jdkType': 'Android SDK'])
            def writer = new StringWriter()
            new XmlNodePrinter(new PrintWriter(writer)).print(parsedXml)
            imlFile.text = writer.toString()

        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}

preBuild.dependsOn(pushDownJdkDependency)

